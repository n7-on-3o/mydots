-- dracula_transparent.lua
local colors = {
  bg = "none",
  fg = "#f8f8f2",
  selection = "#44475a",
  comment = "#6272a4",
  red = "#ff5555",
  orange = "#ffb86c",
  yellow = "#f1fa8c",
  green = "#50fa7b",
  purple = "#bd93f9",
  cyan = "#8be9fd",
  pink = "#ff79c6",
  bright_red = "#ff6e6e",
  bright_green = "#69ff94",
  bright_yellow = "#ffffa5",
  bright_blue = "#d6acff",
  bright_magenta = "#ff92df",
  bright_cyan = "#a4ffff",
  bright_white = "#ffffff",
}

local highlights = {
  Normal = { fg = colors.fg, bg = colors.bg },
  Comment = { fg = colors.comment, italic = true },
  Constant = { fg = colors.cyan },
  String = { fg = colors.yellow },
  Character = { fg = colors.purple },
  Number = { fg = colors.orange },
  Boolean = { fg = colors.orange },
  Float = { fg = colors.orange },
  Identifier = { fg = colors.pink },
  Function = { fg = colors.green },
  Statement = { fg = colors.purple },
  Conditional = { fg = colors.pink, italic = true },
  Repeat = { fg = colors.pink, italic = true },
  Label = { fg = colors.pink },
  Operator = { fg = colors.cyan },
  Keyword = { fg = colors.purple, italic = true },
  Exception = { fg = colors.pink },
  PreProc = { fg = colors.purple },
  Include = { fg = colors.purple },
  Define = { fg = colors.purple },
  Title = { fg = colors.orange },
  Macro = { fg = colors.purple },
  PreCondit = { fg = colors.purple },
  Type = { fg = colors.cyan },
  StorageClass = { fg = colors.cyan },
  Structure = { fg = colors.cyan },
  Typedef = { fg = colors.cyan },
  Special = { fg = colors.cyan },
  SpecialChar = { fg = colors.pink },
  Tag = { fg = colors.cyan },
  Delimiter = { fg = colors.cyan },
  SpecialComment = { fg = colors.comment, italic = true },
  Underlined = { fg = colors.cyan, underline = true },
  Bold = { bold = true },
  Italic = { italic = true },
  Error = { fg = colors.bright_red, bg = colors.bg, bold = true },
  Todo = { fg = colors.yellow, bg = colors.bg, bold = true },
  DiffAdd = { fg = colors.bg, bg = colors.bright_green },
  DiffChange = { fg = colors.bg, bg = colors.orange },
  DiffDelete = { fg = colors.bg, bg = colors.red },
  DiffText = { fg = colors.bg, bg = colors.bright_blue },
  -- Treesitter Highlights
  TSAnnotation = { fg = colors.purple },
  TSAttribute = { fg = colors.cyan },
  TSBoolean = { fg = colors.orange },
  TSCharacter = { fg = colors.purple },
  TSComment = { fg = colors.comment, italic = true },
  TSConditional = { fg = colors.pink, italic = true },
  TSConstant = { fg = colors.cyan },
  TSConstBuiltin = { fg = colors.cyan },
  TSConstMacro = { fg = colors.cyan },
  TSConstructor = { fg = colors.green },
  TSEmphasis = { fg = colors.yellow, italic = true },
  TSError = { fg = colors.bright_red },
  TSException = { fg = colors.pink },
  TSField = { fg = colors.cyan },
  TSFloat = { fg = colors.orange },
  TSFunction = { fg = colors.green },
  TSFuncBuiltin = { fg = colors.green },
  TSFuncMacro = { fg = colors.green },
  TSInclude = { fg = colors.purple },
  TSKeyword = { fg = colors.purple, italic = true },
  TSKeywordFunction = { fg = colors.purple, italic = true },
  TSLabel = { fg = colors.pink },
  TSMethod = { fg = colors.green },
  TSNamespace = { fg = colors.cyan },
  TSNone = { fg = colors.fg },
  TSNumber = { fg = colors.orange },
  TSOperator = { fg = colors.cyan },
  TSParameter = { fg = colors.orange },
  TSParameterReference = { fg = colors.orange },
  TSProperty = { fg = colors.cyan },
  TSPunctDelimiter = { fg = colors.cyan },
  TSPunctBracket = { fg = colors.cyan },
  TSPunctSpecial = { fg = colors.cyan },
  TSRepeat = { fg = colors.pink, italic = true },
  TSString = { fg = colors.yellow },
  TSStringRegex = { fg = colors.yellow },
  TSStringEscape = { fg = colors.yellow },
  TSSymbol = { fg = colors.purple },
  TSTag = { fg = colors.pink },
  TSTagDelimiter = { fg = colors.cyan },
  TSText = { fg = colors.fg },
  TSTitle = { fg = colors.orange },
  TSLiteral = { fg = colors.yellow },
  TSURI = { fg = colors.cyan, underline = true },
  TSVariable = { fg = colors.pink },
  TSVariableBuiltin = { fg = colors.pink },
}

for group, properties in pairs(highlights) do
  vim.api.nvim_set_hl(0, group, properties)
end
